import { Hono } from 'hono';
import fs from 'fs';
import path from 'path';

const app = new Hono();

// In-memory storage for messages
let messages: string[] = [];

// Serve the index.html file
app.get('/', (c) => {
  // Construct the path to the index.html file
  const indexPath = path.join(__dirname, '..', 'public', 'index.html');  // Adjust the path to your HTML file
  if (fs.existsSync(indexPath)) {
    return c.html(fs.readFileSync(indexPath, 'utf-8'));  // Read and serve the HTML file
  } else {
    return c.text('404 Not Found', 404);  // Return 404 if file is not found
  }
});

// API to receive and store the message
app.post('/api/message', async (c) => {
  try {
    const { message } = await c.req.json();

    if (message) {
      messages.push(message);
      return c.json({ messages });
    } else {
      return c.json({ error: 'No message provided!' }, 400);
    }
  } catch (error) {
    console.error('Error parsing JSON:', error);
    return c.json({ error: 'Invalid JSON format' }, 400);  // Send back an error response if JSON parsing fails
  }
});

// API to retrieve all stored messages
app.get('/api/messages', (c) => {
  return c.json({ messages });
});

// Start the server with Bun.serve
Bun.serve({
  fetch: app.fetch,
  port: 3000,
  development: true, // Enable development mode for hot-reloading
});

console.log('Server running at http://localhost:3000');
